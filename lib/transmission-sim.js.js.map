{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap a60c0562b4fd075f9c6f","webpack:///./src/transmission-sim.js"],"names":["Outbreak","constructor","params","epiParams","index","onset","level","caseList","preorder","forEach","n","key","Symbol","for","caseMap","Map","map","node","indexCase","epiParameters","getCase","get","postorder","traverse","children","child","cases","externalCases","filter","transmit","donor","numberOftransmissions","R0","i","parent","infectivity","push","spread","levels","maxLevel","reduce","max","cur","Math","Infinity","possibleDonors","x"],"mappings":"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","file":"transmission-sim.js.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"transmission-sim.js\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"transmission-sim.js\"] = factory();\n\telse\n\t\troot[\"transmission-sim.js\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap a60c0562b4fd075f9c6f","/** @module transmission-sim */\n\n/**\n * The Outbreak class. Currently the rate of transmission is constant but it could be adjusted in\n * the future. That'd be nice.\n */\n\nexport class Outbreak {\n  /**\n\t * The constructor takes a config object containing a starting seed for the outbreak,\n\t * a probability distribution for infectivity over time, and a distribution from which to draw the\n\t * number of subsequent infections.\n\t *\n\t * @constructor\n\t * @param {object} params - The parameters governing the outbreak.\n\t * These are curried functions that wait for an x value, and are keyed as {infectivityCDF:,R0cdf:}\n\t */\n  constructor(params = {}) {\n    this.epiParams = params;\n    this.index = {\n      onset: 0,\n      level: 0\n    };\n    this.caseList = [...this.preorder()];\n    this.caseList.forEach((n, index) => (n.key = Symbol.for(`case ${index}`)));\n    this.caseMap = new Map(this.caseList.map(node => [node.key, node]));\n  }\n  /**\n\t * Gets the index case node of the outbreak\n\t *\n\t * @returns {Object|*}\n\t */\n  get indexCase() {\n    return this.index;\n  }\n  /**\n\t * Gets the epiparameters used in the outbreak\n\t *\n\t * @returns {Object|*}\n\t */\n  get epiParameters() {\n    return this.epiParams;\n  }\n\n  /**\n\t * Returns a case from its key (a unique Symbol) stored in\n\t * the node as poperty 'key'.\n\t *\n\t * @param key\n\t * @returns {*}\n\t */\n  getCase(key) {\n    return this.caseMap.get(key);\n  }\n  /**\n\t * A generator function that returns the nodes in a post-order traversal.\n\t * This is borrowed from figtree.js c- Andrew Rambaut.\n\t * @returns {IterableIterator<IterableIterator<*|*>>}\n\t */\n  * postorder() {\n    const traverse = function * (node) {\n      if (node.children) {\n        for (const child of node.children) {\n          yield* traverse(child);\n        }\n      }\n      yield node;\n    };\n\n    yield* traverse(this.indexCase);\n  }\n\n  /**\n\t * A generator function that returns the nodes in a pre-order traversal\n\t * This is borrowed from figtree.js c- Andrew Rambaut.\n\t * @returns {IterableIterator<IterableIterator<*|*>>}\n\t */\n  * preorder() {\n    const traverse = function * (node) {\n      yield node;\n      if (node.children) {\n        for (const child of node.children) {\n          yield* traverse(child);\n        }\n      }\n    };\n\n    yield* traverse(this.indexCase);\n  }\n  get cases() {\n    return [...this.caseList];\n  }\n\n  /**\n\t * Gets an array containing all the external node objects\n\t * This is borrowed from figtree.js c- Andrew Rambaut.\n\t * @returns {*}\n\t */\n  get externalCases() {\n    return this.cases.filter(node => node.children);\n  }\n  /**\n\t * Returns transmitted cases from a donor case\n\t *\n\t * @param donor - the donor case, epiParameters - object keyed with R0 and infectivity\n\t * where each entry is a function which returns a sample from a distribution.\n\t * @returns adds children to donor case if transmission occurs\n\t */\n  transmit(donor, epiParameters) {\n    // How many transmissions with this case have\n    const numberOftransmissions = epiParameters.R0();\n\n    if (numberOftransmissions > 0) {\n      donor.children = [];\n    }\n    for (let i = 0; i < numberOftransmissions; i++) {\n      const child = {\n        parent: donor,\n        level: donor.level + 1,\n        onset: donor.onset + epiParameters.infectivity()\n      };\n\n      donor.children.push(child);\n    }\n  }\n\n  /**\n\t * A function that calls a transmission call on all nodes until the desired number of levels is added\n\t * to the outbreak. It starts at the most recent level.\n\t * @param levels - the number of levels to add to the growing transmission chain.\n\t */\n  spread(levels) {\n    for (let i = 0; i < levels; i++) {\n      const maxLevel = this.cases.map(node => node.level).reduce((max, cur) => Math.max(max, cur), -Infinity);\n\n      const possibleDonors = this.cases.filter(x => x.level === maxLevel);\n\n      for (const donor of possibleDonors) {\n        this.transmit(donor, this.epiParams);\n      }\n      this.caseList = [...this.preorder()];\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/transmission-sim.js"],"sourceRoot":""}